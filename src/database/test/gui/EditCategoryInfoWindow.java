package database.test.gui;

import database.test.ApplicationMain;
import database.test.DatabaseManager;
import database.test.gui.Const.InfoWindowMode;

import java.awt.Frame;
import java.awt.event.FocusAdapter;
import java.awt.event.FocusEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.SQLException;

import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;

public class EditCategoryInfoWindow
        extends javax.swing.JFrame {

    private static DatabaseManager database = ApplicationMain.getDatabaseInstance();

    private String categoryID_original = null;
    private String categoryID;
    private String categoryName;

    /**
     * Creates new EditCategoryInfoWindow. Note: to use this window, use the
     * static showDialog methods instead.
     */
    private EditCategoryInfoWindow(InfoWindowMode mode) {
        this.initComponents();

        tbxCategoryID.addMouseListener(new MouseAdapter() {
            @Override
            public void mousePressed(MouseEvent e) {
                super.mousePressed(e);
                tbxCategoryID.setCaretPosition(tbxCategoryID.getText().trim().length());
            }
        });
        tbxCategoryName.addMouseListener(new MouseAdapter() {
            @Override
            public void mousePressed(MouseEvent e) {
                super.mousePressed(e);
                tbxCategoryName.setCaretPosition(tbxCategoryName.getText().trim().length());
            }
        });
        btnCancel.addActionListener((ActionEvent) -> {
            categoryID = null;
            categoryName = null;
            SwingUtilities.getWindowAncestor(btnCancel).dispose();
        });

        switch (mode) {
            case ADD:
                this.initializeAddMode();
                break;
            case EDIT:
                this.initializeEditMode();
                break;
            default:
                break;
        }
    }

    /**
     * Parameter --> instance variables --> GUI
     */
    private void setFormData(String categoryID, String categoryName) {
        this.categoryID = categoryID;
        this.categoryName = categoryName;
        tbxCategoryID.setText(categoryID);
        tbxCategoryName.setText(categoryName);
    }

    /**
     * GUI --> instance variables
     */
    private void collectFormData() {
        categoryID = tbxCategoryID.getText().trim();
        categoryName = tbxCategoryName.getText().trim();
    }

    //<editor-fold desc="Database: Update Operations (Insert and Update)">
    private boolean databaseInsertCategory() {
        try {
            database.insertCategory(categoryID, categoryName);
            JOptionPane.showMessageDialog(this,
                    "The new category was successfully added to the database.",
                    "Manage Categories", JOptionPane.INFORMATION_MESSAGE);
            return true;
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this,
                    "Error adding new category to the database:\n" + ex.getMessage(),
                    "Manage Categories", JOptionPane.ERROR_MESSAGE);
            return false;
        }
    }

    private boolean databaseUpdateCategory() {
        try {
            database.updateCategory(categoryID_original, categoryID, categoryName);
            JOptionPane.showMessageDialog(this,
                    "The category information was successfully updated.",
                    "Manage Categories", JOptionPane.INFORMATION_MESSAGE);
            return true;
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this,
                    "Error updating the category information:\n" + ex.getMessage(),
                    "Manage Categories", JOptionPane.ERROR_MESSAGE);
            return false;
        }
    }
    //</editor-fold>

    //<editor-fold defaultstate="collapsed" desc="GUI Code: Custom Initialization and Methods">
    private void initializeAddMode() {
        headerLabel.setText(Const.ECATIW_HEADER_ADD);
        // listeners
        btnSave.addActionListener((ActionEvent) -> {
            this.collectFormData();
            if (this.databaseInsertCategory()) {
                SwingUtilities.getWindowAncestor(btnSave).dispose();
            }
        });
    }

    private void initializeEditMode() {
        headerLabel.setText(Const.ECATIW_HEADER_EDIT);
        // listeners
        btnSave.addActionListener((ActionEvent) -> {
            this.collectFormData();
            if (this.databaseUpdateCategory()) {
                SwingUtilities.getWindowAncestor(btnSave).dispose();
            }
        });
    }

    //</editor-fold>
    //<editor-fold defaultstate="collapsed" desc="GUI Code: Automatically Generated by NetBeans">
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        genderButtonGroup = new javax.swing.ButtonGroup();
        panel_header = new javax.swing.JPanel();
        headerLabel = new javax.swing.JLabel();
        javax.swing.JLabel l_id = new javax.swing.JLabel();
        tbxCategoryID = new javax.swing.JFormattedTextField();
        javax.swing.JLabel l_name = new javax.swing.JLabel();
        tbxCategoryName = new javax.swing.JFormattedTextField();
        panel_commandButtons = new javax.swing.JPanel();
        btnSave = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();

        setMaximumSize(new java.awt.Dimension(330, 200));
        setMinimumSize(new java.awt.Dimension(330, 200));
        setPreferredSize(new java.awt.Dimension(330, 200));
        setResizable(false);
        setSize(new java.awt.Dimension(330, 200));
        getContentPane().setLayout(new java.awt.GridBagLayout());

        panel_header.setBackground(new java.awt.Color(255, 255, 255));
        panel_header.setLayout(new java.awt.GridBagLayout());

        headerLabel.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        headerLabel.setText("New Category");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(8, 16, 8, 16);
        panel_header.add(headerLabel, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 8, 0);
        getContentPane().add(panel_header, gridBagConstraints);

        l_id.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        l_id.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        l_id.setText("Category ID:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(4, 24, 4, 4);
        getContentPane().add(l_id, gridBagConstraints);

        try {
            tbxCategoryID.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("AAAAAAAA")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        tbxCategoryID.setFocusLostBehavior(javax.swing.JFormattedTextField.PERSIST);
        tbxCategoryID.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        tbxCategoryID.setMaximumSize(new java.awt.Dimension(188, 22));
        tbxCategoryID.setMinimumSize(new java.awt.Dimension(188, 22));
        tbxCategoryID.setPreferredSize(new java.awt.Dimension(188, 22));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 8);
        getContentPane().add(tbxCategoryID, gridBagConstraints);

        l_name.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        l_name.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        l_name.setText("Category Name:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(4, 24, 4, 4);
        getContentPane().add(l_name, gridBagConstraints);

        try {
            tbxCategoryName.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        tbxCategoryName.setFocusLostBehavior(javax.swing.JFormattedTextField.PERSIST);
        tbxCategoryName.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        tbxCategoryName.setMaximumSize(new java.awt.Dimension(188, 22));
        tbxCategoryName.setMinimumSize(new java.awt.Dimension(188, 22));
        tbxCategoryName.setPreferredSize(new java.awt.Dimension(188, 22));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 8);
        getContentPane().add(tbxCategoryName, gridBagConstraints);

        btnSave.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        btnSave.setText("Save");
        btnSave.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSave.setMaximumSize(new java.awt.Dimension(128, 36));
        btnSave.setMinimumSize(new java.awt.Dimension(128, 36));
        btnSave.setName(""); // NOI18N
        btnSave.setPreferredSize(new java.awt.Dimension(96, 28));

        btnCancel.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        btnCancel.setText("Cancel");
        btnCancel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCancel.setMaximumSize(new java.awt.Dimension(128, 36));
        btnCancel.setMinimumSize(new java.awt.Dimension(128, 36));
        btnCancel.setName(""); // NOI18N
        btnCancel.setPreferredSize(new java.awt.Dimension(96, 28));

        javax.swing.GroupLayout panel_commandButtonsLayout = new javax.swing.GroupLayout(panel_commandButtons);
        panel_commandButtons.setLayout(panel_commandButtonsLayout);
        panel_commandButtonsLayout.setHorizontalGroup(
            panel_commandButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_commandButtonsLayout.createSequentialGroup()
                .addContainerGap(122, Short.MAX_VALUE)
                .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        panel_commandButtonsLayout.setVerticalGroup(
            panel_commandButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_commandButtonsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel_commandButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTHEAST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(panel_commandButtons, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnSave;
    private javax.swing.ButtonGroup genderButtonGroup;
    private javax.swing.JLabel headerLabel;
    private javax.swing.JPanel panel_commandButtons;
    private javax.swing.JPanel panel_header;
    private javax.swing.JFormattedTextField tbxCategoryID;
    private javax.swing.JFormattedTextField tbxCategoryName;
    // End of variables declaration//GEN-END:variables
    //</editor-fold>

    //<editor-fold desc="Static showDialog() Methods">
    /**
     * Show a dialog for creating a new category.
     *
     * @param owner The window that calls the dialog.
     * @return An array of length 2, containing the category ID and category
     * name, respectively. Array of nulls if the user canceled.
     */
    public static String[] showNewCategoryDialog(Frame owner) {
        EditCategoryInfoWindow win = new EditCategoryInfoWindow(InfoWindowMode.ADD);

        Util.createAndShowDialog(owner, "Manage Categories",
                win.getContentPane(), win.getPreferredSize());

        System.out.println("showNewCategoryDialog() returning: {"
                + win.categoryID + ", " + win.categoryName + "}");

        return new String[]{win.categoryID, win.categoryName};
    }

    /**
     * Show a dialog for editing info of an existing category.
     *
     * @param owner The window that calls the dialog.
     * @param categoryID The original ID of the category to be edited.
     * @param categoryName The original name of the category to be edited.
     * @return An array of length 2, containing the updated category ID and
     * category name, respectively. Array of nulls if the user canceled.
     */
    public static String[] showEditCategoryDialog(Frame owner, String categoryID, String categoryName) {
        EditCategoryInfoWindow win = new EditCategoryInfoWindow(InfoWindowMode.EDIT);
        win.setFormData(categoryID, categoryName);
        win.categoryID_original = categoryID;

        Util.createAndShowDialog(owner, "Manage Categories",
                win.getContentPane(), win.getPreferredSize());

        System.out.println("showEditCategoryDialog() returning: {"
                + win.categoryID + ", " + win.categoryName + "}");

        return new String[]{win.categoryID, win.categoryName};
    }
    //</editor-fold>

}
